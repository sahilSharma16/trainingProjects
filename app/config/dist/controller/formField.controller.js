sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/ui/core/Fragment","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/FilterType","sap/m/MessageBox","sap/ui/core/ID","sap/ui/core/library"],function(e,t,o,i,a,r,n,l,s){"use strict";var d;var f;let m;let c;return e.extend("app.config.controller.formField",{onInit:function(){this.getOwnerComponent().getRouter().getRoute("RouteformField").attachPatternMatched(this.handleRouteMatched,this)},handleRouteMatched:function(e){const o={id:e.getParameter("arguments").id,formName:e.getParameter("arguments").formName,formDesc:e.getParameter("arguments").formDesc};console.log("form",o);const n=new t(o);this.getView().setModel(n,"formFieldModel");var l=new i("formType",a.EQ,e.getParameter("arguments").formName);this.getView().byId("formFieldTable").getBinding("items").filter(l,r.Application);this.onRefreshFormField()},fieldDataState:function(){var e=this;return new Promise(function(t,o){var i=new sap.ui.model.json.JSONModel;e.getView().setModel(i,"fieldDataModel");let a=e.getOwnerComponent().getModel();let r=a.bindList("/fieldTable");r.requestContexts(0,Infinity).then(function(o){c=[];o.forEach(function(e){c.push(e.getObject())});i.setData(c);e.getView().setModel(i,"fieldDataModel");d=e.getView().getModel("fieldDataModel").getData();console.log("Fields",d);t()})})},onRefreshFormField:function(){var e=this;var t=e.getView().getModel("formFieldModel").getData();console.log("type",t);Promise.all([this.addExtraField(),this.fieldDataState()]).then(function(){var o=d.filter(function(e){return!f.some(function(o){return o.paraName===e.fieldName&&o.formType===t.formName})});console.log("Extra Objects:",o);o.forEach(function(t){console.log("Extra Object:",t);if(t){var o={id:parseInt(t.id),checkedField:false,formType:e.getView().getModel("formFieldModel").getProperty("/formName"),formDesc:e.getView().getModel("formFieldModel").getProperty("/formDesc"),paraName:t.fieldName,paraDesc:t.fieldDesc};console.log("dfs",o);var i=e.getView().getModel();var a=i.bindList("/formFieldTable");a.create(o);i.bindList(`/formFieldTable(${o.id})`,{success:function(){console.log("Entity already exists, skipping creation.")}})}});e.RefreshData()})},addExtraField:function(){var e=this;return new Promise(function(o,i){var a=new t;e.getView().setModel(a,"formFieldDataModel");let r=e.getOwnerComponent().getModel();let n=r.bindList("/formFieldTable");n.requestContexts(0,Infinity).then(function(t){m=[];t.forEach(function(e){m.push(e.getObject())});a.setData(m);e.getView().setModel(a,"formFieldDataModel");f=e.getView().getModel("formFieldDataModel").getData();console.log("Form Fields",f);o()})})},RefreshData:function(){this.getView().byId("formFieldTable").getBinding("items").refresh()}})});